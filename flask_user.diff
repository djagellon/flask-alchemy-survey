commit 0a1415518360a94a583dc62e9fa8722c6cfd0fd7
Author: drunkmonky <drunkmonky+github@gmail.com>
Date:   Mon Sep 10 10:42:14 2018 -0700

    add userroles

diff --git a/app/__init__.py b/app/__init__.py
index 1ebca2d..97071d7 100644
--- a/app/__init__.py
+++ b/app/__init__.py
@@ -6,6 +6,7 @@ from config import Config
 from flask_sqlalchemy import SQLAlchemy
 from flask_migrate import Migrate
 from flask_login import LoginManager
+from flask_user import UserManager
 
 db = SQLAlchemy()
 migrate = Migrate()
@@ -21,6 +22,9 @@ def create_app():
     login.init_app(app)
     login.login_view = 'auth.login'
 
+    from app.models import User
+    user_manager = UserManager(app, db, User)
+
     from app.api import bp as bp_api
     app.register_blueprint(bp_api, url_prefix='/api')
 
diff --git a/app/models.py b/app/models.py
index 5301d68..ebacb43 100644
--- a/app/models.py
+++ b/app/models.py
@@ -10,7 +10,7 @@ class User(UserMixin, db.Model):
     username = db.Column(db.String(64), index=True, unique=True)
     email = db.Column(db.String(120), index=True, unique=True)
     password_hash = db.Column(db.String(128))
-    admin = db.Column(db.Boolean)
+    roles = db.relationship('Role', secondary='user_roles')
     surveys = db.relationship('SurveyModel', backref='user', lazy='dynamic')
 
     def __repr__(self):
@@ -22,6 +22,22 @@ class User(UserMixin, db.Model):
     def check_password(self, password):
         return check_password_hash(self.password_hash, password)
 
+
+class Role(db.Model):
+    __tablename__ = 'roles'
+
+    id = db.Column(db.Integer, primary_key=True)
+    name = db.Column(db.String(50), unique=True)
+
+
+class UserRoles(db.Model):
+    __tablename__ = 'user_roles'
+
+    id = db.Column(db.Integer(), primary_key=True)
+    user_id = db.Column(db.Integer(), db.ForeignKey('user.id', ondelete='CASCADE'))
+    role_id = db.Column(db.Integer(), db.ForeignKey('roles.id', ondelete='CASCADE'))
+
+
 class SurveyModel(db.Model):
     __tablename__ = 'survey'
 
@@ -51,6 +67,7 @@ class QuestionModel(db.Model):
                     answer = self.answer,
                     survey_id = self.survey_id)
 
+
 @login.user_loader
 def load_user(id):
     return User.query.get(int(id))
\ No newline at end of file
diff --git a/app/report/routes.py b/app/report/routes.py
index 89be84f..6b5b9b1 100644
--- a/app/report/routes.py
+++ b/app/report/routes.py
@@ -1,15 +1,15 @@
 from flask import Blueprint, render_template, redirect, url_for
 from flask_login import login_required
+from flask_user import roles_required
 from app import db
 from app.report import bp
 
 from app.models import SurveyModel
 
 @bp.route('/report/all')
-@login_required
+@roles_required('admin')
 def show_all_reports():
     data = db.session.query(SurveyModel).all() or []
-    # import pdb;pdb.set_trace()
     return render_template('reports_all.html', title="report", data=data)
 
 @bp.route('/report/<module>')
diff --git a/migrations/versions/e563523128ff_.py b/migrations/versions/e563523128ff_.py
new file mode 100644
index 0000000..2f19162
--- /dev/null
+++ b/migrations/versions/e563523128ff_.py
@@ -0,0 +1,44 @@
+"""empty message
+
+Revision ID: e563523128ff
+Revises: 984c65d1bd37
+Create Date: 2018-09-07 13:59:02.579174
+
+"""
+from alembic import op
+import sqlalchemy as sa
+
+
+# revision identifiers, used by Alembic.
+revision = 'e563523128ff'
+down_revision = '984c65d1bd37'
+branch_labels = None
+depends_on = None
+
+
+def upgrade():
+    # ### commands auto generated by Alembic - please adjust! ###
+    op.create_table('roles',
+    sa.Column('id', sa.Integer(), nullable=False),
+    sa.Column('name', sa.String(length=50), nullable=True),
+    sa.PrimaryKeyConstraint('id'),
+    sa.UniqueConstraint('name')
+    )
+    op.create_table('user_roles',
+    sa.Column('id', sa.Integer(), nullable=False),
+    sa.Column('user_id', sa.Integer(), nullable=True),
+    sa.Column('role_id', sa.Integer(), nullable=True),
+    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
+    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
+    sa.PrimaryKeyConstraint('id')
+    )
+    op.drop_column(u'user', 'admin')
+    # ### end Alembic commands ###
+
+
+def downgrade():
+    # ### commands auto generated by Alembic - please adjust! ###
+    op.add_column(u'user', sa.Column('admin', sa.BOOLEAN(), autoincrement=False, nullable=True))
+    op.drop_table('user_roles')
+    op.drop_table('roles')
+    # ### end Alembic commands ###
diff --git a/vera.py b/vera.py
index b6778ab..8a54ddc 100644
--- a/vera.py
+++ b/vera.py
@@ -1,5 +1,5 @@
 from app import create_app, db
-from app.models import User, SurveyModel, QuestionModel
+from app.models import User, Role, UserRoles, SurveyModel, QuestionModel
 
 
 app = create_app()
@@ -13,5 +13,7 @@ app.jinja_env.filters['has_open'] = has_open
 def make_shell_context():
     return {'db': db,
             'User': User, 
+            'Role': Role,
+            'UserRoles': UserRoles,
             'SurveyModel': SurveyModel, 
             'QuestionModel': QuestionModel}
